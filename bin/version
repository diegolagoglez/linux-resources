#!/bin/bash

function usage() {
	echo "version v0.1 - Utility to control projects versions."
	echo "version <command> [options]"
	echo "Commands:"
	echo "  inc   : Increments version."
	
}

function error() {
	echo ERROR: $@ 1>&2
}

version_file=

function find_version_file() {
	if [ -f "./VERSION" ]; then
		version_file="./VERSION"
	elif [ -f "$VERSION_FILE" ]; then
		version_file="$VERSION_FILE"
	else
		error "No version file found."
		exit 2
	fi
}

function count_version_parts() {
	echo $(cat $version_file | tr '.' ' ' | wc -w)
}

function version_parts() {
	if [ "$1" == "full" ]; then
		echo $(cat $version_file | tr '.' ' ')
	else
		# Strips off codename
		echo $(cat $version_file | cut -d' ' -f1 | tr '.' ' ')
	fi
}

function extended_version_view() {
	local count=$(count_version_parts)
	local version=($(version_parts))
	case $count in
		1)
			echo "Mayor version: ${version[0]}"
		;;
		2)
			echo "Mayor version: ${version[0]}"
			echo "Minor version: ${version[1]}"
		;;
		3)
			echo "Mayor version : ${version[0]}"
			echo "Middle version: ${version[1]}"
			echo "Mayor version : ${version[2]}"
		;;
		4)
			echo "Mayor version : ${version[0]}"
			echo "Middle version: ${version[1]}"
			echo "Mayor version : ${version[2]}"
			echo "Build         : ${version[3]}"
		;;
		5)
			echo "Mayor version : ${version[0]}"
			echo "Middle version: ${version[1]}"
			echo "Mayor version : ${version[2]}"
			echo "Build         : ${version[3]}"
			echo "Codename      : ${version[4]}"
		;;
		*)
			error "Invalid version file format."
			exit 3
		;;
	esac
}

function inc_version() {
	local count=$(count_version_parts)
	local version=($(version_parts))
	version[$count-1]=$((${version[$count-1]}+1))
	for i in $(seq 0 $(($count-1))); do
		echo -n ${version[$i]}
		if [ $i -lt $(($count-1)) ]; then
			echo -n .
		fi
	done
	echo
}

find_version_file

function main() {
	case "$1" in
		inc)
			new_version=$(inc_version)
			echo $new_version > $version_file
		;;
		file)
			echo $version_file
		;;
		view)
			cat $version_file
		;;
		xview)
			extended_version_view
		;;
		help)
			usage
		;;
		*)
			usage
			exit 1
		;;
	esac
}

main $@

