#!/bin/bash

DEFAULT_FILE="."
XA_SHOW_PATHS=

function error() {
	echo "ERROR: $1" 1>&2
	if [[ $2 =~ [0-9]+ ]]; then
		exit $2
	fi
}

function require() {
	if ! type "$1" >/dev/null 2>&1; then
		error "Command '$1' is required." 1
	fi
}

function usage() {
	echo "Usage: `basename $0` [options] <command> [<path> [...]]"
	echo "Commands:"
	echo "  ls                   List file extended attributes."
	echo "  show                 Show all file extended attributes."
	echo "  set|s <name> <value> Set attribute <name> with value <value>."
	echo "  get|g <name>         Get attribute <name>."
	echo "  rm <name>            Remove attribute <name>."
	echo "  clear                Remove all attributes."
	echo "Options:"
	echo "  -h                   Show this help and exit."
	echo "  -p                   Show path before attributes."
}

function show_path_if_needed() {
	if [ ! -z "$SHOW_PATHS" ]; then
		echo "# $1"
	fi
}

function list_attributes() {
	require attr
	local paths="$@"
	if [ ${#paths[@]} == 0 ]; then
		paths=(".")
	fi
	for f in ${paths[@]}; do
		show_path_if_needed $f
		attr -ql "$f"
	done
}

function show_attributes() {
	require attr
	local paths="$@"
	if [ ${#paths[@]} == 0 ]; then
		paths=(".")
	fi
	for f in ${paths[@]}; do
		show_path_if_needed $f
		attr -ql "$f" | while read; do
			echo -n "$REPLY "
			get_attribute "$REPLY" "$f"
		done
	done
}

function get_attribute() {
	require attr
	local name="$1"
	shift
	local paths="$@"
	if [ ${#paths[@]} == 0 ]; then
		paths=(".")
	fi
	for f in ${paths[@]}; do
		show_path_if_needed "$f"
		attr -qg "$name" "$f"
		echo
	done
}

function set_attribute() {
	require attr
	local name="$1"
	local value="$2"
	shift 2
	attr -qs "$name" -V "$value" "$@"
}

function remove_attributes() {
	require attr
	local name="$1"
}

function process_options() {
	while getopts ":hp" opt; do
		case "$opt" in
			h)
				usage
				exit 1
			;;
			p)
				SHOW_PATHS=yes
			;;
			\?)
				error "Invalid option: -$OPTARG" 1
			;;
			:)
				error "Option -$OPTARG requires an argument." 1
			;;
		esac
	done

	return $(( OPTIND - 1 ))
}

function main() {

	process_options "$@"
	shift $?

	case "$1" in
		ls)
			shift
			list_attributes "$@"
		;;
		show)
			shift
			show_attributes "$@"
		;;
		set|s)
			shift
			set_attribute "$@"
		;;
		get|g)
			shift
			get_attribute "$@"
		;;
		rm)
			shift
			remove_attributes "$@"
		;;
		help)
			usage
		;;
		"")
			error "Must specify a command. Use '$(basename -- $0) help' to show help." 1
		;;
		*)
			error "Invalid command: $1" 1
		;;
	esac
}

main "$@"
