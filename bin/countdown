#!/bin/bash

verbose=0

function usage() {
	echo "$(basename $0) v0.1 - Utility to do a console locking countdown."
	echo "2014-03-27 Diego Lago Gonz√°lez <diego.lago.gonzalez@gmail.com>"
	echo "Usage: $(basename $0) [option]"
	echo "Options:"
	echo " -t <time>    : Countdown this time (integer for seconds, HH:MM[:SS] format for other time)."
	echo " -u <time>    : Countdown until this time (HH:MM[:SS] format)."
	echo " -r <command> : Run this on countdown end."
	echo " -v           : Verbose."
	echo " -h           : Show this help and exit."
	exit 0
}

function verbose() {
	if [ $verbose -ne 0 ]; then
		echo $@
	fi
}

function countdown_to() {
	local OLD_IFS="${IFS}"
	IFS=":"
	if [[ $1 =~ ^-?[0-9]+$ ]]; then
		local SECONDS="$1"
	else
		local ARR=( $1 )
		local SECONDS=$((  (ARR[0] * 60 * 60) + (ARR[1] * 60) + ARR[2]  ))
	fi
	local START=$(date +%s)
	local END=$((START + SECONDS))
	local CUR="$START"

	[ -n ${ARR[1]} ] && ARR[1]="00"
	[ -n ${ARR[2]} ] && ARR[2]="00"
	verbose "Countdown for ${ARR[0]} hours, ${ARR[1]} minutes and ${ARR[2]} seconds ($SECONDS seconds)."

	while [[ $CUR -lt $END ]]; do
		CUR=$(date +%s)
		LEFT=$((END-CUR))

		printf "\r%02d:%02d:%02d" $((LEFT/3600)) $(( (LEFT/60)%60)) $((LEFT%60))

		sleep 1
	done
	IFS="${OLD_IFS}"
	echo "        "
}

function countdown_until() {
	local until_time=$(date +%s -d $1 2>/dev/null)

	if [ $? -ne 0 ]; then
		echo "ERROR: Invalid date: $1"
		exit 4
	fi

	verbose "Countdown until $(date +%H:%M:%S -d $1)"

	while [ $(date +%s) -lt $until_time ]; do
		LEFT=$(($until_time - $(date +%s) ))
		printf "\r%02d:%02d:%02d" $((LEFT/3600)) $(( (LEFT/60)%60)) $((LEFT%60))
		sleep 1
	done
}

function main() {
	if [ $# -eq 0 ]; then
		usage
	fi

	local action=
	local param=
	local run=

	while getopts ":t:u:r:vh" opt; do
		case "$opt" in
			t)
				[ "$action" != "" ] && echo "ERROR: Cannot specify -t and -u together." && exit 5
				action="countdown_to"
				param=$OPTARG
			;;
			u)
				[ "$action" != "" ] && echo "ERROR: Cannot specify -u and -t together." && exit 5
				action="countdown_until"
				param=$OPTARG
			;;
			h)
				usage
			;;
			r)
				# FIXME: OPTARG does not catch quoted parameters.
				run="$OPTARG"
			;;
			v)
				verbose=1
			;;
			\?)
				echo "ERROR: Invalid option: -$OPTARG" >&2
				exit 1	
			;;
			:)
				echo "ERROR: Option -$OPTARG requires an argument." >&2
				exit 2
			;;
		esac
	done

	$action $param

	if [ "$run" != "" ]; then
		$run
	fi
}

main "$@"
