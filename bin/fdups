#!/bin/bash

function usage() {
	echo "Usage: fdups <dir> [<exclude-path>]"
}

function error() {
	echo "ERROR: $1" 1>&2
	if [ ! -z $3 ]; then
		usage
	fi
	if [ ! $2 -eq 0 ]; then
		exit $2
	fi
}

function echo_stderr() {
	echo $@ 1>&2
}

if [ "$1" == "" ]; then
	error "Bad parameters." 1 true
fi

dir="$1"
exclude="$2"
temp_file=$(mktemp --suffix=.fdups)
temp_file2=$(mktemp --suffix=.fdups)
temp_file3=$(mktemp --suffix=.fdups)

if [ "$exclude" == "" ]; then
	file_count=$(find $dir -type f \( ! -name . \) | wc -l)
else
	file_count=$(find $dir -type f \( ! -name . \) | grep -v $exclude | wc -l)
fi

modulus=$(($file_count / 100))

if [ $modulus -eq 0 ]; then
	modulus=1
fi

let counter=0
if [ "$exclude" == "" ]; then
	find $dir -type f \( ! -name . \) | while read; do
		counter=$((counter+1))
		md5sum "$REPLY" >> $temp_file
		if [ $(($counter % $modulus)) == 0 ]; then
			echo_stderr -n "."
		fi
	done
else
	find $dir -type f \( ! -name . \) | grep -v $exclude | while read; do
		counter=$((counter+1))
		md5sum "$REPLY" >> $temp_file
		if [ $(($counter % $modulus)) == 0 ]; then
			echo_stderr -n "."
		fi
	done
fi

echo_stderr -n "."

cat $temp_file | sort > $temp_file2

echo_stderr -n "."

cat $temp_file2 | uniq -w 32 > $temp_file

echo_stderr -n "."

file_count=$(wc -l $temp_file | cut -d' ' -f1)
modulus=$(($file_count / 100))

if [ $modulus -eq 0 ]; then
	modulus=1
fi

let counter=0
cat $temp_file | while read; do
	counter=$((counter+1))
	md5=$(echo "$REPLY" | cut -d' ' -f1)
	file=$(echo "$REPLY" | cut -d' ' -f3)
	file_size=$(stat --format=%s "$file")
	file_count=$(cat $temp_file2 | grep $md5 | wc -l)
	echo "$file_count $md5 $file_size $file" >> $temp_file3
	if [ $(($counter % $modulus)) == 0 ]; then
		echo_stderr -n "."
	fi
done

echo_stderr -n "."

cat $temp_file3 | sort -r -g

echo_stderr -n "."

rm $temp_file
rm $temp_file2
rm $temp_file3

echo_stderr

