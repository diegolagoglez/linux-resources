#!/bin/bash

VERSION="0.1"

VERBOSE=no

function log() {
	if [ "$VERBOSE" == "yes" ]; then
		echo $@
	fi
}

function error() {
	echo "ERROR: $1" 1>&2
	if [ -n "$2" -a $2 != 0 ]; then
		exit $2
	fi
}

function check_ubuntu {
	if [ $(lsb_release -i | awk '{print $3}') != "Ubuntu" ]; then
		error "This is not a Ubuntu system." -2
	fi
}

function check_command {
	local command="$1"
	which $command > /dev/null || error "Command '$command' is needed but is not found. Please, install it before continue." -3
}

function credits() {
	echo "$(basename $0) v$VERSION - Utility for basic Ubuntu systems administration."
	echo "Diego Lago Gonz√°lez <diego.lago.gonzalez@gmail.com> - http://github.com/diegolagoglez"
}

function usage() {
	echo "Usage: $(basename $0) [command] [options]"
	echo "Commands:"
	echo "  snapshot : Makes an btrfs snapshot of the btrfs Ubuntu layout."
	echo "    update : Update packages index."
	echo "   upgrade : Upgrades all the system packages."
	echo "   version : Show system version."
	echo "      help : Show this help and exits."
}

function upgrade_system() {
	type aptitude > /dev/null 2>&1 || error "Unable to do a full upgrade. 'aptitude' command not found." -5
	sudo aptitude safe-upgrade -y
}

function update_packages_index() {
	sudo apt-get update
}

function check_filesystem_type() {
	local fs_type="$1"
	if [ "$fs_type" != "btrfs" ]; then
		error "Invalid filesystem (must be btrfs): $fs_type"
	fi
}

function make_snapshot() {
	check_command btrfs
	root_dev=$(/bin/df | grep \/$ | cut -d' ' -f1)
	dev_fs=$(/bin/df -T | grep \/$ | awk '{print $2}')
	check_filesystem_type $dev_fs
	tmp_dir=$(sudo mktemp -d /tmp/btrfs-snapshot-XXXXXXXX)
	sudo mount -t $dev_fs $root_dev $tmp_dir || error "Cannot mount $dev_fs" -4
	# Device is mounted. Do the actual snapshot.
	local date=$(date +%Y%m%d%H%M%S)
	for dir in $tmp_dir/*; do
		to_snapshot=$(echo $(basename $dir) | grep "^@" | grep -v snapshot)
		if [ -n "$to_snapshot" ]; then
			# echo "btrfs subvolume snapshot $tmp_dir/$to_snapshot $tmp_dir/$to_snapshot-$date"
			sudo btrfs subvolume snapshot $tmp_dir/$to_snapshot $tmp_dir/$to_snapshot-$date
			if [ $? != 0 ]; then
				error "Cannot create snapshot from $tmp_dir/$to_snapshot to $tmp_dir/$to_snapshot-$date" -5
			fi
		fi
	done
	sudo umount $tmp_dir
	sudo rmdir $tmp_dir
}

function show_version() {
	if [ $# -gt 0 ]; then
		OPTIONS=
	else
		OPTIONS="-ds"
	fi
	while getopts ":haidrcs" opt; do
		case "$opt" in
			h)
				echo " -h   This help."
				echo " -a   Full version information."
				echo " -i   Distributor ID."
				echo " -d   Description of this distribution (default)."
				echo " -r   Release number of this distribution."
				echo " -c   Codename of this distribution."
				echo " -s   Short version of the information (default)."
			;;
			a|i|d|r|c|s)
				OPTIONS+=" -$opt"
			;;
			\?)
				error "Invalid option for subcommand: -$OPTARG" 2
			;;
			:)
				error "Option -$OPTARG requires an argument." 2
			;;
		esac
	done

	lsb_release $OPTIONS
}

function main() {
	if [ $# -eq 0 ]; then
		usage
		exit 1
	fi

	check_ubuntu
	local command="$1"
	shift
	case "$command" in
		"snapshot")
			make_snapshot $@
		;;
		"update")
			update_packages_index $@
		;;
		"upgrade")
			upgrade_system $@
		;;
		"version")
			show_version "$@"
		;;
		"help")
			credits
			usage
		;;
		*)
			error "Invalid command: $command" 2
		;;
	esac
}

main $@
